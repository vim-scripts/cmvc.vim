*CMVC.txt*	Plugin to integrate CMVC into Vim.  Last Change: 2002 Mar 01

CMVC Plugin						    *cmvc* *CMVC*

This plugin integrates the IBM Configuration Management Version Control 
(CMVC) application with Vim.  It provides keyboard shortcuts as well as a 
menu to access common functions such as checking files in and out, viewing 
and responding to defects, etc.

This plugin is available only if 'compatible' is not set.  You can avoid
loading this plugin by setting the "loaded_cmvc" variable in your |vimrc|
file: >
	:let loaded_cmvc = 1
<
CONTENTS:
    1. Interface					    |CMVC-interface|
    2. Use						    |CMVC-use|
    3. Settings						    |CMVC-settings|

{Vi does not have any of this}

==============================================================================
1. Interface						    *CMVC-interface*

The commands for working with CMVC are primarily implemented via mappings to
provide quick access to the desired functions.  Menus are also provided as an
alternate interface.

Mappings:

The mappings are hopefully intuitively defined.  Each is composed of the
|mapleader| followed by three characters.  The first character is the 
first letter of the object on which you want to operate, and the next two 
characters are the first two letters of the action you want to perform on 
that object.

For example:
	Extract a file	   --  <Leader>fex
	Create a defect	   --  <Leader>dcr
	Integrate a track  --  <Leader>tin
	Set the release	   --  <Leader>sre

Exceptions to the above are as follows:
    1)  The mappings for two-word commands use the first letter of each word
	instead of the first two letters of the first word.  For example:

	Check in a file	       --  <Leader>fci
	Add a note to a defect --  <Leader>dan

    2)  The mappings for commands that begin with the same letters use the
	first letter of the command followed by the first letter that is
	different between the two commands.  Examples:

	Unlock file	--  <Leader>ful
	Undo file	--  <Leader>fud
	Commit Track    --  <Leader>tcm
	Complete Track  --  <Leader>tcp
	Consider Track  --  <Leader>tcn

Commands:
    None, currently.

==============================================================================
2. Use							    *CMVC-use*

Functions will prompt for information as needed, and this information can be
changed at any time.  For example, the first time you want to view a defect,
you will be prompted for the defect number, as well as the family and release
(if these two fields haven't already been set.  See |CMVC-settings| below).
Subsequent commands to view a defect will only prompt for the defect number,
because the family and release will be cached.  If you decide to view a defect
for a different release, you will need to execute the "Set Release" command to
override the cached release with your desired version.

When working with defects, as well as checking in and creating files, you can
enter remarks about the action you are performing.  When you enter a command
that allows you to add remarks, a new window will split open where you can
type your remarks.  When you close this window (with :wq or normal-mode ZZ)
the remarks will be added to the function you are performing.

==============================================================================
3. Settings						    *CMVC-settings*

The following settings allow you to customize how the CMVC plugin runs.

							    *g:cmvcFamily*
Specifies the family used for the CMVC session.  If this variable is not
already set, the script checks for the existance of the CMVC_FAMILY
environment variable.  If the environment variable does not exist,
g:cmvcFamily is set to an empty string, and you will be prompted for a value
when it is needed.

							    *g:cmvcRelease*
Specifies the release used for the CMVC session.  If this variable is not
already set, the script checks for the existance of the CMVC_RELEASE
environment variable.  If the environment variable does not exist,
g:cmvcRelease is set to an empty string and you will be prompted for a value
when it is needed.

							    *g:cmvcComponent*
Specifies the component used for the CMVC session.  If this variable is not
already set, the script checks for the existance of the CMVC_COMPONENT
environment variable.  If the environment variable does not exist,
g:cmvcComponent is set to an empty string, and you will be prompted for a
value when it is needed.

							    *g:cmvcUseTop*
Specifies whether or not to use the -top flag should be used.  The default is
to use the -top flag.  If this option is turned off, then any file you check
out or extract will be put into the current working directory, even is it has
path information as part of the filename.  This will prevent you from editing
files with the same filename in different releases.

							    *g:cmvcTop*
Specifies the directory into which files are extracted / checked out.  Set
this variable to the path into which you want to open files.  If this variable
is not set, the plugin will try to set it to the value of the CMVC_TOP
environment variable.  If CMVC_TOP doesn't exist, the script will default
g:cmvcTop to the current working directory.

							    *g:cmvcUseTracking*
Set whether or not a defect must be specified when checking in / creating a
file.  The default is to not use tracking.

							    *g:cmvcUseVerbose*
Set whether or not the -verbose flag should be used.  The default is to not
use the verbose flag. 

							    *g:cmvcTopLevelMenu*
Set the name of the menu under which the CMVC menu should appear.  The default
is blank, which means the CMVC menu will appear on the menu bar itself.
Changing this variable will not affect the current session.  It should be set
in the |vimrc| to affect any subsequent Vim sessions.

							    *g:cmvcUsePluginMenu*
Set whether or not the CMVC menus should appear under the "Plugin" menu.  The
default is to not use the Plugin menu.  When set, g:cmvcTopLevelMenu will be
set to "Plugin." unless g:cmvcTopLevelMenu is already set to a different value.
Changing this variable will not affect the current session.  It should be set
in the |vimrc| to affect any subsequent Vim sessions.

==============================================================================
vim:tw=78:ts=8:ft=help
